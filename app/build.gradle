plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.codemultiplechannel.autoload"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        flavorDimensions "versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        flavorDimensions "versionCode"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding{
        enabled = true
    }
    sourceSets {
        stage {
            res.srcDirs = ['src/stage/res/']
//            java { srcDirs "src/stage/java" }
        }
        dev {
            res.srcDirs = ['src/dev/res', 'src/dev/res/']
            //res.srcDirs = ['src/dev/res/']
//            java { srcDirs "src/dev/java" }
        }
        prod {
            res.srcDirs = ['src/prod/res', 'src/prod/res/']
            //res.srcDirs = ['src/prod/res/']
        }
        main {
            res.srcDirs = ['src/main/res', 'src/main/res/']
            //res.srcDirs = ['src/main/res']
        }
    }
    productFlavors {
        dev {
            applicationId "com.example.appmultiplechannel.dev"
            resValue "string", "app_name_custom", "dev_myapp"
            resValue "bool", "isrRank", 'false'
            buildConfigField "String", "ENVIRONMENT", '"dev"'
            //@drawable/icon_dev
//            manifestPlaceholders = [ENVIRONMENT: "dev",
//                                    app_icon   : "@drawable/icon_dev"]
        }

        stage {
            applicationId "com.example.appmultiplechannel.stage"
            resValue "string", "app_name_custom", "stage_myapp"
            resValue "bool", "isrRank", 'true'
            buildConfigField "String", "ENVIRONMENT", '"stage"'

//            manifestPlaceholders = [ENVIRONMENT: "stage",
//                                    app_icon   : "@drawable/icon_stage"]
        }

        prod {
            applicationId "com.example.appmultiplechannel.prod"
            resValue "string", "app_name_custom", "myapp"
            resValue "bool", "isrRank", 'true'
            buildConfigField "String", "ENVIRONMENT", '"prod"'

//            manifestPlaceholders = [ENVIRONMENT: "prod",
//                                    app_icon   : "@drawable/icon_prod"]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def propertiesFile = rootProject.file("module_load.properties")
    //加载本地配置文件
    Properties properties = new Properties()
    properties.load(propertiesFile.newDataInputStream())
    def lib2LoadState =  properties.getProperty("lib2Load")
    def isLib2Load =  Boolean.parseBoolean(lib2LoadState)


    implementation project(':lib1')

    if(isLib2Load){
        implementation project(':lib2')
        //implementation project(path: ':lib2')
    }else {
        //implementation files('aar/lib2-dev-debug.aar')

        //devDebugImplementation files('aar/lib2-dev-debug.aar')
        //devReleaseImplementation files('aar/lib2-dev-release.aar')
        //devImplementation files('aar/lib2-dev-debug.aar')
        devImplementation files('aar/lib2-dev-release.aar')

        //prodDebugImplementation files('aar/lib2-prod-debug.aar')
        //prodReleaseImplementation files("aar/lib2-prod-release.aar")
        //prodImplementation files('aar/lib2-prod-debug.aar')
        prodImplementation files('aar/lib2-prod-release.aar')

        //stageDebugImplementation files("aar/lib2-stage-debug.aar")
        //stageReleaseImplementation files("aar/lib2-stage-release.aar")
        //stageImplementation files("aar/lib2-stage-debug.aar")
        stageImplementation files("aar/lib2-stage-release.aar")
    }
    implementation project(path: ':lib3')

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'


    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}